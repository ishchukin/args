name: ci
on:
  pull_request:
  release:
    types: [published]
  push:
    branches:
      - master

jobs:
  Test:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ${{ matrix.os }}
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-22.04
        compiler:
          - gcc-12
        CMAKE_GENERATOR:
          - "Ninja Multi-Config"
    steps:
      - uses: actions/checkout@v3

      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/vcpkg
            ./build/vcpkg_installed
            ${{ env.CONAN_USER_HOME }}
            ~/.cache/pip
            ${{ env.HOME }}/.cache/vcpkg/archives
            ${{ env.XDG_CACHE_HOME }}/vcpkg/archives
            ${{ env.LOCALAPPDATA }}\vcpkg\archives
            ${{ env.APPDATA }}\vcpkg\archives
          key: ${{ runner.os }}-${{ matrix.compiler }}-${{matrix.build_type}}-${{matrix.generator}}-${{matrix.developer_mode}}-${{ hashFiles('**/CMakeLists.txt') }}-${{ hashFiles('./conanfile.txt')}}-${{ hashFiles('./vcpkg.json')}}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.compiler }}-${{matrix.build_type}}-${{matrix.generator}}-${{matrix.developer_mode}}

      - name: Setup Cpp
        uses: aminya/setup-cpp@v1
        with:
          compiler: ${{ matrix.compiler }}
          vcvarsall: false
          cmake: true
          ninja: true
          conan: false
          vcpkg: true
          ccache: true
          clangtidy: false
          cppcheck: false
          gcovr: false
          opencppcoverage: false

      - name: Configure CMake
        run: |
          cmake  --preset=dev-x64-unixlike-debug-vcpkg
      - name: Build
        run: |
          cmake --build --preset=dev-x64-unixlike-debug-vcpkg
      - name: Unix - Test and coverage
        run: |
          ctest --preset=test-dev-x64-unixlike-debug-vcpkg
